version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      CHOKIDAR_USEPOLLING: "true"
    profiles:
      - dev
    depends_on:
      - backend
    volumes:
      - ./frontend:/usr/local/app
      - frontend-node-modules:/usr/local/app/node_modules

  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: "production"
    profiles:
      - prod
    depends_on:
      - backend-prod

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    profiles:
      - dev
    ports:
      - "3001:3001"
    volumes:
      - ./backend/src:/usr/local/app/src
      - ./backend/package.json:/usr/local/app/package.json
      - ./backend/package-lock.json:/usr/local/app/package-lock.json
      - backend-node-modules:/usr/local/app/node_modules
    restart: always
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: players
      NODE_ENV: development
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./backend/src:/usr/local/app/src
      - ./backend/package.json:/usr/local/app/package.json
      - ./backend/package-lock.json:/usr/local/app/package-lock.json
      - backend-node-modules:/usr/local/app/node_modules
    restart: always
    profiles:
      - prod
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: players
  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: players
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

volumes:
  backend-node-modules:
  mysql-data:
  frontend-node-modules:
